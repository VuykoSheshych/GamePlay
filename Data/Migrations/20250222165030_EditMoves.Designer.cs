// <auto-generated />
using System;
using GamePlay.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace GamePlay.Migrations
{
	[DbContext(typeof(GameDbContext))]
	[Migration("20250222165030_EditMoves")]
	partial class EditMoves
	{
		/// <inheritdoc />
		protected override void BuildTargetModel(ModelBuilder modelBuilder)
		{
#pragma warning disable 612, 618
			modelBuilder
				.HasAnnotation("ProductVersion", "9.0.2")
				.HasAnnotation("Proxies:ChangeTracking", false)
				.HasAnnotation("Proxies:CheckEquality", false)
				.HasAnnotation("Proxies:LazyLoading", true)
				.HasAnnotation("Relational:MaxIdentifierLength", 63);

			NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

			modelBuilder.Entity("GamePlay.Models.GameRecord", b =>
				{
					b.Property<Guid>("Id")
						.ValueGeneratedOnAdd()
						.HasColumnType("uuid");

					b.Property<DateTime>("Date")
						.HasColumnType("timestamp with time zone");

					b.Property<string>("PlayerBlack")
						.IsRequired()
						.HasColumnType("text");

					b.Property<string>("PlayerWhite")
						.IsRequired()
						.HasColumnType("text");

					b.Property<string>("Result")
						.IsRequired()
						.HasColumnType("text");

					b.HasKey("Id");

					b.ToTable("GameRecords");
				});

			modelBuilder.Entity("GamePlay.Models.Move", b =>
				{
					b.Property<Guid>("Id")
						.ValueGeneratedOnAdd()
						.HasColumnType("uuid");

					b.Property<string>("FenBefore")
						.IsRequired()
						.HasColumnType("text");

					b.Property<string>("From")
						.IsRequired()
						.HasColumnType("text");

					b.Property<Guid?>("GameRecordId")
						.HasColumnType("uuid");

					b.Property<int>("MoveNumber")
						.HasColumnType("integer");

					b.Property<string>("PlayerColor")
						.IsRequired()
						.HasColumnType("text");

					b.Property<string>("Promotion")
						.HasColumnType("text");

					b.Property<string>("SanNotation")
						.IsRequired()
						.HasColumnType("text");

					b.Property<DateTime>("Timestamp")
						.HasColumnType("timestamp with time zone");

					b.Property<string>("To")
						.IsRequired()
						.HasColumnType("text");

					b.HasKey("Id");

					b.HasIndex("GameRecordId");

					b.ToTable("Moves");
				});

			modelBuilder.Entity("GamePlay.Models.Move", b =>
				{
					b.HasOne("GamePlay.Models.GameRecord", null)
						.WithMany("Moves")
						.HasForeignKey("GameRecordId");
				});

			modelBuilder.Entity("GamePlay.Models.GameRecord", b =>
				{
					b.Navigation("Moves");
				});
#pragma warning restore 612, 618
		}
	}
}
